==============================
 GIT WORKFLOW B√ÅSICO (BRYAN)
==============================

‚úÖ 1. VER LOS ARCHIVOS CAMBIADOS
--------------------------------
git status

‚úÖ 2. A√ëADIR CAMBIOS AL COMMIT
-------------------------------
Para a√±adir todo:
git add .

O solo un archivo espec√≠fico:
git add path/to/archivo.c

‚úÖ 3. HACER COMMIT CON MENSAJE
-------------------------------
git commit -m "Descripci√≥n clara del cambio"

Ejemplos:
git commit -m "Fix: corrected Makefile rules"
git commit -m "Add: debug target and comments"

‚úÖ 4. DESCARGAR CAMBIOS DEL REPOSITORIO REMOTO
-----------------------------------------------
(Siempre haz esto antes de hacer push)

git pull origin main

üëâ Esto actualiza tu rama local con los √∫ltimos cambios del repositorio remoto.
üëâ Si hay conflictos, Git te lo dir√° y deber√°s resolverlos manualmente.

‚úÖ 5. SUBIR TUS CAMBIOS
------------------------
Una vez que hayas hecho pull y resuelto todo:

git push origin main

üìå Cambia "main" si est√°s trabajando en otra rama, como "dev":
git push origin dev

‚úÖ 6. VER EN QU√â RAMA EST√ÅS
----------------------------
git branch

‚úÖ 7. PRIMER PUSH DE UNA NUEVA RAMA (SOLO UNA VEZ)
---------------------------------------------------
git push -u origin nombre_de_rama

===================================
‚ö†Ô∏è CONSEJO:
- Siempre haz `git pull origin main` antes de hacer `git push`.
- As√≠ evitas conflictos y aseguras que tienes los √∫ltimos cambios del equipo.

